const express = require('express');
const cors = require('cors');
const app = express();
const PORT = 5000;

app.use(cors()); // לאפשר בקשות מהפרונטאנד
app.use(express.json()); // לאפשר קריאת גוף בקשה ב-JSON

// נתונים מדומים (Mock Data) של טיסות
const flights = [
  {
    id: 1,
    airline: 'El Al',
    from: 'Tel Aviv',
    to: 'New York',
    price: 450,
    departureDate: '2024-12-01',
    departureTime: '10:00 AM',
    arrivalDate: '2024-12-01',
    arrivalTime: '4:00 PM',
    baggageAllowance: '23kg',
    flightDuration: '10 hours',
    seatType: 'Economy',
    transitStops: 0,
    inFlightMeals: 'Included',
  },
  {
    id: 2,
    airline: 'Delta',
    from: 'Tel Aviv',
    to: 'London',
    price: 300,
    departureDate: '2024-12-05',
    departureTime: '6:00 PM',
    arrivalDate: '2024-12-05',
    arrivalTime: '9:00 PM',
    baggageAllowance: '30kg',
    flightDuration: '5 hours',
    seatType: 'Business',
    transitStops: 1,
    inFlightMeals: 'Included',
  },
  {
    id: 3,
    airline: 'United',
    from: 'Tel Aviv',
    to: 'Paris',
    price: 350,
    departureDate: '2024-12-10',
    departureTime: '2:00 PM',
    arrivalDate: '2024-12-10',
    arrivalTime: '6:00 PM',
    baggageAllowance: '20kg',
    flightDuration: '4 hours',
    seatType: 'Economy',
    transitStops: 0,
    inFlightMeals: 'Not Included',
  },
];

// נתונים מדומים להזמנות
let reservations = [];

// חיפוש טיסות לפי פרמטרים
app.get('/api/flights', (req, res) => {
  const { from, to, maxPrice, departureDate, arrivalDate } = req.query;

  // סינון טיסות לפי פרמטרים
  const filteredFlights = flights.filter(flight => {
    const matchesFrom = from ? flight.from.toLowerCase() === from.toLowerCase() : true;
    const matchesTo = to ? flight.to.toLowerCase() === to.toLowerCase() : true;
    const matchesPrice = maxPrice ? flight.price <= parseFloat(maxPrice) : true;
    const matchesDepartureDate = departureDate ? flight.departureDate === departureDate : true;
    const matchesArrivalDate = arrivalDate ? flight.arrivalDate === arrivalDate : true;

    return matchesFrom && matchesTo && matchesPrice && matchesDepartureDate && matchesArrivalDate;
  });

  res.json(filteredFlights);
});

// קבלת פרטי טיסה לפי מזהה
app.get('/api/flights/:id', (req, res) => {
  const flight = flights.find((flight) => flight.id === parseInt(req.params.id));

  if (!flight) {
    return res.status(404).json({ error: 'Flight not found' });
  }

  res.json(flight);
});

// יצירת הזמנה חדשה
app.post('/api/reservations', (req, res) => {
  const { flightId, name, lastName, phone, email } = req.body;

  // ווידוא שכל השדות מלאים
  if (!flightId || !name || !lastName || !phone || !email) {
    return res.status(400).json({ error: 'All fields are required' });
  }

  // יצירת הזמנה חדשה
  const newReservation = {
    id: reservations.length + 1,
    flightId,
    name,
    lastName,
    phone,
    email,
    status: 'confirmed', // סטטוס ברירת מחדל
  };

  // הוספת הזמנה לרשימה
  reservations.push(newReservation);

  res.status(201).json(newReservation); // מחזיר את ההזמנה החדשה
});

// מאזין לפורט 5000
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});